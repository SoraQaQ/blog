# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/v1/login:
        post:
            tags:
                - AdminService
            operationId: AdminService_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/admin.v1.LoginReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/admin.v1.LoginReply'
    /api/v1/logout:
        post:
            tags:
                - AdminService
            operationId: AdminService_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/admin.v1.LogoutReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/admin.v1.LogoutReply'
    /api/v1/register:
        post:
            tags:
                - AdminService
            operationId: AdminService_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/admin.v1.RegisterReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/admin.v1.RegisterReply'
    /api/v1/users:
        get:
            tags:
                - AdminService
            operationId: AdminService_ListUser
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/admin.v1.ListUserReply'
    api/v1/user/update:
        post:
            tags:
                - UserService
            operationId: UserService_UpdateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.UpdateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.UpdateReply'
components:
    schemas:
        admin.v1.ListUserReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/admin.v1.User'
                total:
                    type: integer
                    format: int32
        admin.v1.LoginReply:
            type: object
            properties:
                id:
                    type: string
                token:
                    type: string
        admin.v1.LoginReq:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/admin.v1.User'
        admin.v1.LogoutReply:
            type: object
            properties:
                id:
                    type: string
        admin.v1.LogoutReq:
            type: object
            properties:
                id:
                    type: string
        admin.v1.RegisterReply:
            type: object
            properties:
                message:
                    type: string
                success:
                    type: string
        admin.v1.RegisterReq:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                email:
                    type: string
                nickname:
                    type: string
        admin.v1.User:
            type: object
            properties:
                id:
                    type: string
                user_name:
                    type: string
                password:
                    type: string
                nick_name:
                    type: string
                email:
                    type: string
                token:
                    type: string
        user.v1.UpdateReply:
            type: object
            properties:
                message:
                    type: string
                success:
                    type: string
        user.v1.UpdateRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/user.v1.User'
        user.v1.User:
            type: object
            properties:
                id:
                    type: string
                userName:
                    type: string
                password:
                    type: string
                nickName:
                    type: string
                email:
                    type: string
tags:
    - name: AdminService
    - name: UserService
